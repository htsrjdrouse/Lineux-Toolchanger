[{"id":"fb6760d8.13c2b","type":"websocket out","z":"113b8fdb.62078","name":"","server":"f1cbc592.6810a8","client":"","x":555,"y":177,"wires":[]},{"id":"b22ddd59.7f155","type":"function","z":"113b8fdb.62078","name":"format time nicely","func":"msg.payload = msg.payload.toString();\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":163,"wires":[["fb6760d8.13c2b"]]},{"id":"43850952.048848","type":"mqtt in","z":"113b8fdb.62078","name":"","topic":"topic/test","qos":"2","broker":"173c4a0c.069e96","x":88.5,"y":256,"wires":[["213749a.cf6eab6","b22ddd59.7f155"]]},{"id":"213749a.cf6eab6","type":"debug","z":"113b8fdb.62078","name":"","active":true,"console":"false","complete":"false","x":374.5,"y":275,"wires":[]},{"id":"f1cbc592.6810a8","type":"websocket-listener","z":"113b8fdb.62078","path":"/ws/simple","wholemsg":"false"},{"id":"173c4a0c.069e96","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]

[{"id":"9296598a.55cd98","type":"http response","z":"113b8fdb.62078","name":"","x":536,"y":91,"wires":[]},{"id":"4191956b.f4cc5c","type":"template","z":"113b8fdb.62078","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                var res = data.split(\"_\");\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                //line += \"<p>\"+data+\"</p>\";\n                \n                var xpos = \"<p>\"+res[0]+\"</p>\";\n                var ypos = \"<p>\"+res[1]+\"</p>\";\n                var zpos = \"<p>\"+res[2]+\"</p>\";\n                var epos = \"<p>\"+res[3]+\"</p>\";\n                \n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                \n                document.getElementById('xpos').innerHTML = xpos;\n                document.getElementById('ypos').innerHTML = ypos;\n                document.getElementById('zpos').innerHTML = zpos;\n                document.getElementById('epos').innerHTML = epos;\n                \n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        \n        <div id=\"xpos\"></div>\n        <div id=\"ypos\"></div>\n        <div id=\"zpos\"></div>\n        <div id=\"epos\"></div>\n        \n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":321,"y":94,"wires":[["9296598a.55cd98"]]},{"id":"756c3db5.8ed2f4","type":"http in","z":"113b8fdb.62078","name":"","url":"/simple","method":"get","swaggerDoc":"","x":103,"y":86,"wires":[["4191956b.f4cc5c"]]}]
